{"remainingRequest":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/babel-loader/lib/index.js!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/ts-loader/index.js??ref--14-2!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/InitFarm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/InitFarm.vue","mtime":1659781455226},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/babel.config.js","mtime":1659781455223},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1659782032043},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/babel-loader/lib/index.js","mtime":1659782032013},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/ts-loader/index.js","mtime":1659782043109},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1659782032043},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js","mtime":1659782045677}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9lbGVua292bG9yZW56by9zdGFraW5nLWhlcm9lcy9nZW0tZmFybS9hcHAvZ2VtLWZhcm0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgb25Nb3VudGVkLCByZWYsIHdhdGNoIH0gZnJvbSAndnVlJzsKaW1wb3J0IHVzZVdhbGxldCBmcm9tICcuLi8uLi9jb21wb3NhYmxlcy93YWxsZXQnOwppbXBvcnQgdXNlQ2x1c3RlciBmcm9tICcuLi8uLi9jb21wb3NhYmxlcy9jbHVzdGVyJzsKaW1wb3J0IHsgaW5pdEdlbUZhcm0gfSBmcm9tICdAL2NvbW1vbi9nZW0tZmFybSc7CmltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7CmltcG9ydCB7IEJOIH0gZnJvbSAnQHByb2plY3Qtc2VydW0vYW5jaG9yJzsKaW1wb3J0IHsgUmV3YXJkVHlwZSB9IGZyb20gJ0BnZW13b3Jrcy9nZW0tZmFybS10cyc7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgZW1pdHM6IFsnbmV3LWZhcm0nXSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIGN0eCkgewogICAgdmFyIF91c2VXYWxsZXQgPSB1c2VXYWxsZXQoKSwKICAgICAgICB3YWxsZXQgPSBfdXNlV2FsbGV0LndhbGxldCwKICAgICAgICBnZXRXYWxsZXQgPSBfdXNlV2FsbGV0LmdldFdhbGxldDsKCiAgICB2YXIgX3VzZUNsdXN0ZXIgPSB1c2VDbHVzdGVyKCksCiAgICAgICAgY2x1c3RlciA9IF91c2VDbHVzdGVyLmNsdXN0ZXIsCiAgICAgICAgZ2V0Q29ubmVjdGlvbiA9IF91c2VDbHVzdGVyLmdldENvbm5lY3Rpb247CgogICAgdmFyIGdmOwogICAgd2F0Y2goW3dhbGxldCwgY2x1c3Rlcl0sIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gaW5pdEdlbUZhcm0oZ2V0Q29ubmVjdGlvbigpLCBnZXRXYWxsZXQoKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgZ2YgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSk7IC8vbmVlZGVkIGNveiBtb3VudHMgbGF0ZXIKCiAgICBvbk1vdW50ZWQoIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghKGdldFdhbGxldCgpICYmIGdldENvbm5lY3Rpb24oKSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBpbml0R2VtRmFybShnZXRDb25uZWN0aW9uKCksIGdldFdhbGxldCgpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBnZiA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKTsgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGluaXQgZmFybQoKICAgIHZhciBtaW50QSA9IHJlZigpOwogICAgdmFyIHR5cGVBID0gcmVmKFJld2FyZFR5cGUuVmFyaWFibGUpOwogICAgdmFyIG1pbnRCID0gcmVmKCk7CiAgICB2YXIgdHlwZUIgPSByZWYoUmV3YXJkVHlwZS5GaXhlZCk7CiAgICB2YXIgbWluU3Rha2luZ1BlcmlvZFNlYyA9IHJlZigpOwogICAgdmFyIGNvb2xkb3duUGVyaW9kU2VjID0gcmVmKCk7CiAgICB2YXIgdW5zdGFraW5nRmVlTGFtcCA9IHJlZigpOwoKICAgIHZhciBpbml0RmFybSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIF95aWVsZCRnZiRpbml0RmFybVdhbCwgZmFybTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZi5pbml0RmFybVdhbGxldChuZXcgUHVibGljS2V5KG1pbnRBLnZhbHVlKSwgdHlwZUEudmFsdWUsIG5ldyBQdWJsaWNLZXkobWludEIudmFsdWUpLCB0eXBlQi52YWx1ZSwgewogICAgICAgICAgICAgICAgICBtaW5TdGFraW5nUGVyaW9kU2VjOiBuZXcgQk4obWluU3Rha2luZ1BlcmlvZFNlYy52YWx1ZSksCiAgICAgICAgICAgICAgICAgIGNvb2xkb3duUGVyaW9kU2VjOiBuZXcgQk4oY29vbGRvd25QZXJpb2RTZWMudmFsdWUpLAogICAgICAgICAgICAgICAgICB1bnN0YWtpbmdGZWVMYW1wOiBuZXcgQk4odW5zdGFraW5nRmVlTGFtcC52YWx1ZSkKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkZ2YkaW5pdEZhcm1XYWwgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGZhcm0gPSBfeWllbGQkZ2YkaW5pdEZhcm1XYWwuZmFybTsKICAgICAgICAgICAgICAgIGN0eC5lbWl0KCduZXctZmFybScsIGZhcm0ucHVibGljS2V5LnRvQmFzZTU4KCkpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CgogICAgICByZXR1cm4gZnVuY3Rpb24gaW5pdEZhcm0oKSB7CiAgICAgICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgcmV0dXJuIHsKICAgICAgd2FsbGV0OiB3YWxsZXQsCiAgICAgIFJld2FyZFR5cGU6IFJld2FyZFR5cGUsCiAgICAgIG1pbnRBOiBtaW50QSwKICAgICAgdHlwZUE6IHR5cGVBLAogICAgICBtaW50QjogbWludEIsCiAgICAgIHR5cGVCOiB0eXBlQiwKICAgICAgbWluU3Rha2luZ1BlcmlvZFNlYzogbWluU3Rha2luZ1BlcmlvZFNlYywKICAgICAgY29vbGRvd25QZXJpb2RTZWM6IGNvb2xkb3duUGVyaW9kU2VjLAogICAgICB1bnN0YWtpbmdGZWVMYW1wOiB1bnN0YWtpbmdGZWVMYW1wLAogICAgICBpbml0RmFybTogaW5pdEZhcm0KICAgIH07CiAgfQp9KTs="},{"version":3,"sources":["/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/InitFarm.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { defineComponent, onMounted, ref, watch } from 'vue';\nimport useWallet from '../../composables/wallet';\nimport useCluster from '../../composables/cluster';\nimport { initGemFarm } from '@/common/gem-farm';\nimport { PublicKey } from '@solana/web3.js';\nimport { BN } from '@project-serum/anchor';\nimport { RewardType } from '@gemworks/gem-farm-ts';\n\nexport default defineComponent({\n  emits: ['new-farm'],\n  setup(props, ctx) {\n    const { wallet, getWallet } = useWallet();\n    const { cluster, getConnection } = useCluster();\n\n    let gf: any;\n    watch([wallet, cluster], async () => {\n      gf = await initGemFarm(getConnection(), getWallet()!);\n    });\n\n    //needed coz mounts later\n    onMounted(async () => {\n      if (getWallet() && getConnection()) {\n        gf = await initGemFarm(getConnection(), getWallet()!);\n      }\n    });\n\n    // --------------------------------------- init farm\n    const mintA = ref<string>();\n    const typeA = ref<any>(RewardType.Variable);\n    const mintB = ref<string>();\n    const typeB = ref<any>(RewardType.Fixed);\n\n    const minStakingPeriodSec = ref<string>();\n    const cooldownPeriodSec = ref<string>();\n    const unstakingFeeLamp = ref<string>();\n\n    const initFarm = async () => {\n      const { farm } = await gf.initFarmWallet(\n        new PublicKey(mintA.value!),\n        typeA.value,\n        new PublicKey(mintB.value!),\n        typeB.value,\n        {\n          minStakingPeriodSec: new BN(minStakingPeriodSec.value!),\n          cooldownPeriodSec: new BN(cooldownPeriodSec.value!),\n          unstakingFeeLamp: new BN(unstakingFeeLamp.value!),\n        }\n      );\n\n      ctx.emit('new-farm', farm.publicKey.toBase58());\n    };\n\n    return {\n      wallet,\n      RewardType,\n      mintA,\n      typeA,\n      mintB,\n      typeB,\n      minStakingPeriodSec,\n      cooldownPeriodSec,\n      unstakingFeeLamp,\n      initFarm,\n    };\n  },\n});\n"],"sourceRoot":""}]}