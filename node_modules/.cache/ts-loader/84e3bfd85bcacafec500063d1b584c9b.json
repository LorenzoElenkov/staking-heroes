{"remainingRequest":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/babel-loader/lib/index.js!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/ts-loader/index.js??ref--14-2!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/UpdateFarm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/UpdateFarm.vue","mtime":1659781455226},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/babel.config.js","mtime":1659781455223},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1659782032043},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/babel-loader/lib/index.js","mtime":1659782032013},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/ts-loader/index.js","mtime":1659782043109},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1659782032043},{"path":"/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js","mtime":1659782045677}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9lbGVua292bG9yZW56by9zdGFraW5nLWhlcm9lcy9nZW0tZmFybS9hcHAvZ2VtLWZhcm0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgb25Nb3VudGVkLCByZWYsIHdhdGNoIH0gZnJvbSAndnVlJzsKaW1wb3J0IHVzZVdhbGxldCBmcm9tICcuLi8uLi9jb21wb3NhYmxlcy93YWxsZXQnOwppbXBvcnQgdXNlQ2x1c3RlciBmcm9tICcuLi8uLi9jb21wb3NhYmxlcy9jbHVzdGVyJzsKaW1wb3J0IHsgaW5pdEdlbUZhcm0gfSBmcm9tICcuLi8uLi9jb21tb24vZ2VtLWZhcm0nOwppbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnOwppbXBvcnQgeyBCTiB9IGZyb20gJ0Bwcm9qZWN0LXNlcnVtL2FuY2hvcic7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgcHJvcHM6IHsKICAgIGZhcm06IFN0cmluZwogIH0sCiAgZW1pdHM6IFsndXBkYXRlLWZhcm0nXSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIGN0eCkgewogICAgdmFyIF91c2VXYWxsZXQgPSB1c2VXYWxsZXQoKSwKICAgICAgICB3YWxsZXQgPSBfdXNlV2FsbGV0LndhbGxldCwKICAgICAgICBnZXRXYWxsZXQgPSBfdXNlV2FsbGV0LmdldFdhbGxldDsKCiAgICB2YXIgX3VzZUNsdXN0ZXIgPSB1c2VDbHVzdGVyKCksCiAgICAgICAgY2x1c3RlciA9IF91c2VDbHVzdGVyLmNsdXN0ZXIsCiAgICAgICAgZ2V0Q29ubmVjdGlvbiA9IF91c2VDbHVzdGVyLmdldENvbm5lY3Rpb247CgogICAgdmFyIGdmOwogICAgd2F0Y2goW3dhbGxldCwgY2x1c3Rlcl0sIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gaW5pdEdlbUZhcm0oZ2V0Q29ubmVjdGlvbigpLCBnZXRXYWxsZXQoKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgZ2YgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSk7IC8vbmVlZGVkIGNveiBtb3VudHMgbGF0ZXIKCiAgICBvbk1vdW50ZWQoIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghKGdldFdhbGxldCgpICYmIGdldENvbm5lY3Rpb24oKSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBpbml0R2VtRmFybShnZXRDb25uZWN0aW9uKCksIGdldFdhbGxldCgpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBnZiA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKTsgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHVwZGF0ZSBmYXJtCgogICAgdmFyIG1hbmFnZXIgPSByZWYoKTsKICAgIHZhciBtaW5TdGFraW5nUGVyaW9kU2VjID0gcmVmKCk7CiAgICB2YXIgY29vbGRvd25QZXJpb2RTZWMgPSByZWYoKTsKICAgIHZhciB1bnN0YWtpbmdGZWVMYW1wID0gcmVmKCk7CgogICAgdmFyIHVwZGF0ZUZhcm0gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBuZXdDb25maWc7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmIChtaW5TdGFraW5nUGVyaW9kU2VjLnZhbHVlIHx8IGNvb2xkb3duUGVyaW9kU2VjLnZhbHVlIHx8IHVuc3Rha2luZ0ZlZUxhbXAudmFsdWUpIHsKICAgICAgICAgICAgICAgICAgbmV3Q29uZmlnID0gewogICAgICAgICAgICAgICAgICAgIG1pblN0YWtpbmdQZXJpb2RTZWM6IG5ldyBCTihtaW5TdGFraW5nUGVyaW9kU2VjLnZhbHVlKSwKICAgICAgICAgICAgICAgICAgICBjb29sZG93blBlcmlvZFNlYzogbmV3IEJOKGNvb2xkb3duUGVyaW9kU2VjLnZhbHVlKSwKICAgICAgICAgICAgICAgICAgICB1bnN0YWtpbmdGZWVMYW1wOiBuZXcgQk4odW5zdGFraW5nRmVlTGFtcC52YWx1ZSkKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2YudXBkYXRlRmFybVdhbGxldChuZXcgUHVibGljS2V5KHByb3BzLmZhcm0pLCBuZXdDb25maWcsIG1hbmFnZXIudmFsdWUgPyBuZXcgUHVibGljS2V5KG1hbmFnZXIudmFsdWUpIDogdW5kZWZpbmVkKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY3R4LmVtaXQoJ3VwZGF0ZS1mYXJtJyk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiB1cGRhdGVGYXJtKCkgewogICAgICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwoKICAgIHJldHVybiB7CiAgICAgIG1hbmFnZXI6IG1hbmFnZXIsCiAgICAgIG1pblN0YWtpbmdQZXJpb2RTZWM6IG1pblN0YWtpbmdQZXJpb2RTZWMsCiAgICAgIGNvb2xkb3duUGVyaW9kU2VjOiBjb29sZG93blBlcmlvZFNlYywKICAgICAgdW5zdGFraW5nRmVlTGFtcDogdW5zdGFraW5nRmVlTGFtcCwKICAgICAgdXBkYXRlRmFybTogdXBkYXRlRmFybQogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/elenkovlorenzo/staking-heroes/gem-farm/app/gem-farm/src/components/gem-farm/UpdateFarm.vue?vue&type=script&lang=ts"],"names":[],"mappings":";;AACA,SAAS,eAAT,EAA0B,SAA1B,EAAqC,GAArC,EAA0C,KAA1C,QAAuD,KAAvD;AACA,OAAO,SAAP,MAAsB,0BAAtB;AACA,OAAO,UAAP,MAAuB,2BAAvB;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,SAAT,QAA0B,iBAA1B;AACA,SAAS,EAAT,QAAmB,uBAAnB;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AADD,GADsB;AAI7B,EAAA,KAAK,EAAE,CAAC,aAAD,CAJsB;AAK7B,EAAA,KAL6B,iBAKvB,KALuB,EAKhB,GALgB,EAKb;AACd,qBAA8B,SAAS,EAAvC;AAAA,QAAQ,MAAR,cAAQ,MAAR;AAAA,QAAgB,SAAhB,cAAgB,SAAhB;;AACA,sBAAmC,UAAU,EAA7C;AAAA,QAAQ,OAAR,eAAQ,OAAR;AAAA,QAAiB,aAAjB,eAAiB,aAAjB;;AAEA,QAAI,EAAJ;AACA,IAAA,KAAK,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZ,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CADC;;AAAA;AACvB,cAAA,EADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB,GAAL,CALc,CASd;;AACA,IAAA,SAAS,uEAAC;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,SAAS,MAAM,aAAa,EADxB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEK,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CAFhB;;AAAA;AAEN,cAAA,EAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT,CAVc,CAgBd;;AACA,QAAM,OAAO,GAAG,GAAG,EAAnB;AACA,QAAM,mBAAmB,GAAG,GAAG,EAA/B;AACA,QAAM,iBAAiB,GAAG,GAAG,EAA7B;AACA,QAAM,gBAAgB,GAAG,GAAG,EAA5B;;AAEA,QAAM,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB,oBACE,mBAAmB,CAAC,KAApB,IACA,iBAAiB,CAAC,KADlB,IAEA,gBAAgB,CAAC,KAHnB,EAIE;AACA,kBAAA,SAAS,GAAG;AACV,oBAAA,mBAAmB,EAAE,IAAI,EAAJ,CAAO,mBAAmB,CAAC,KAA3B,CADX;AAEV,oBAAA,iBAAiB,EAAE,IAAI,EAAJ,CAAO,iBAAiB,CAAC,KAAzB,CAFT;AAGV,oBAAA,gBAAgB,EAAE,IAAI,EAAJ,CAAO,gBAAgB,CAAC,KAAxB;AAHR,mBAAZ;AAKD;;AAZgB;AAAA,uBAcX,EAAE,CAAC,gBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,SAFI,EAGJ,OAAO,CAAC,KAAR,GAAgB,IAAI,SAAJ,CAAc,OAAO,CAAC,KAAtB,CAAhB,GAA+C,SAH3C,CAdW;;AAAA;AAmBjB,gBAAA,GAAG,CAAC,IAAJ,CAAS,aAAT;;AAnBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAV,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAsBA,WAAO;AACL,MAAA,OAAO,EAAP,OADK;AAEL,MAAA,mBAAmB,EAAnB,mBAFK;AAGL,MAAA,iBAAiB,EAAjB,iBAHK;AAIL,MAAA,gBAAgB,EAAhB,gBAJK;AAKL,MAAA,UAAU,EAAV;AALK,KAAP;AAOD;AAxD4B,CAAD,CAA9B","sourcesContent":["\nimport { defineComponent, onMounted, ref, watch } from 'vue';\nimport useWallet from '../../composables/wallet';\nimport useCluster from '../../composables/cluster';\nimport { initGemFarm } from '../../common/gem-farm';\nimport { PublicKey } from '@solana/web3.js';\nimport { BN } from '@project-serum/anchor';\n\nexport default defineComponent({\n  props: {\n    farm: String,\n  },\n  emits: ['update-farm'],\n  setup(props, ctx) {\n    const { wallet, getWallet } = useWallet();\n    const { cluster, getConnection } = useCluster();\n\n    let gf: any;\n    watch([wallet, cluster], async () => {\n      gf = await initGemFarm(getConnection(), getWallet()!);\n    });\n\n    //needed coz mounts later\n    onMounted(async () => {\n      if (getWallet() && getConnection()) {\n        gf = await initGemFarm(getConnection(), getWallet()!);\n      }\n    });\n\n    // --------------------------------------- update farm\n    const manager = ref<string>();\n    const minStakingPeriodSec = ref<string>();\n    const cooldownPeriodSec = ref<string>();\n    const unstakingFeeLamp = ref<string>();\n\n    const updateFarm = async () => {\n      let newConfig;\n      if (\n        minStakingPeriodSec.value ||\n        cooldownPeriodSec.value ||\n        unstakingFeeLamp.value\n      ) {\n        newConfig = {\n          minStakingPeriodSec: new BN(minStakingPeriodSec.value!),\n          cooldownPeriodSec: new BN(cooldownPeriodSec.value!),\n          unstakingFeeLamp: new BN(unstakingFeeLamp.value!),\n        };\n      }\n\n      await gf.updateFarmWallet(\n        new PublicKey(props.farm!),\n        newConfig,\n        manager.value ? new PublicKey(manager.value) : undefined\n      );\n      ctx.emit('update-farm');\n    };\n\n    return {\n      manager,\n      minStakingPeriodSec,\n      cooldownPeriodSec,\n      unstakingFeeLamp,\n      updateFarm,\n    };\n  },\n});\n"],"sourceRoot":""}]}